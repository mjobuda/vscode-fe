{"version":3,"sources":[".././src/settings.js",".././src/tokenProvider.js","../external \"child_process\"","../external \"fs\"","../external \"path\"","../external \"vscode\"","../webpack/bootstrap",".././src/extension.js"],"names":["vscode","module","exports","LANGUAGE_ID","extensionConfig","workspace","getConfiguration","__awaiter","this","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","__generator","body","f","y","t","g","_","label","sent","trys","ops","verb","Symbol","iterator","n","v","op","TypeError","call","pop","length","push","__esModule","getFeTempOutputFolder","activate","fs","tokenTypes","Map","tokenModifiers","legend","tokenTypesLegend","forEach","tokenType","index","set","tokenModifiersLegend","tokenModifier","SemanticTokensLegend","workspaceFolders","uri","path","context","dtp","DocumentSemanticTokensProvider","subscriptions","languages","registerDocumentSemanticTokensProvider","language","scheme","prototype","provideDocumentSemanticTokens","document","token","moduleTokens","builder","_this","_a","lines","fileName","readFileSync","toString","err","console","error","split","slice","getTokensFromTokenFile","SemanticTokensBuilder","text","pos","match","getLineNumberFromCharPos","getText","Number","replace","documentText","start","ret","getTokenDataStartCharacter","getTokenDataLength","_encodeTokenType","getTokenDataTokenType","_encodeTokenModifiers","build","has","get","size","strTokenModifiers","i","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","execSync","settings","tp","activeEditor","outputFiles","async","onDidSave","endsWith","freshCompile","onDidChange","event","window","activeTextEditor","languageId","openFile","filePath","openPath","Uri","file","openTextDocument","doc","showTextDocument","getFilesFromDir","dir","fileList","readdirSync","statSync","isDirectory","concat","getFeCommand","command","outputFolder","rmCommand","feCommand","showErrorMessage","compileAllinVS","fe_options","options","active","disposable","commands","registerCommand","currentlyOpenTabfilePath","currentlyOpenTabfileName","basename","ind","indexOf","reg","setLanguageConfiguration","onEnterRules","beforeText","action","indentAction","IndentAction","Indent","onDidChangeActiveTextEditor","editor","onDidChangeTextDocument","onDidSaveTextDocument","onDidOpenTextDocument"],"mappings":"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","file":"extension.js","sourcesContent":["'use strict';\n/** \n * @author github.com/tintinweb\n * @license MIT\n * \n * \n * */\n/** imports */\nconst vscode = require('vscode');\n\nconst LANGUAGE_ID = \"fe\";\n\nfunction extensionConfig() {\n    return vscode.workspace.getConfiguration(LANGUAGE_ID);\n}\n\nmodule.exports = {\n    LANGUAGE_ID: LANGUAGE_ID,\n    extensionConfig: extensionConfig\n};\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nexports.__esModule = true;\nexports.getFeTempOutputFolder = exports.activate = void 0;\nvar vscode = require(\"vscode\");\nvar fs = require(\"fs\");\nvar settings = require(\"./settings\");\nvar tokenTypes = new Map();\nvar tokenModifiers = new Map();\nvar legend = (function () {\n    // const tokenTypesLegend = [\n    // \t'comment', 'string', 'keyword', 'number', 'regexp', 'operator', 'namespace',\n    // \t'type', 'struct', 'class', 'interface', 'enum', 'typeParameter', 'function',\n    // \t'method', 'macro', 'variable', 'parameter', 'property', 'label'\n    // ];\n    var tokenTypesLegend = [\n        \"Error\",\n        \"Newline\",\n        /// Virtual tokens emitted by the parser\n        \"Indent\",\n        \"Dedent\",\n        \"Name\",\n        \"Int\",\n        \"Hex\",\n        \"Octal\",\n        \"Binary\",\n        // Float\n        \"Text\",\n        \"True\",\n        \"False\",\n        // None\n        \"Assert\",\n        \"Break\",\n        \"Continue\",\n        \"Contract\",\n        \"Def\",\n        \"Const\",\n        \"Elif\",\n        \"Else\",\n        \"Emit\",\n        \"Event\",\n        \"Idx\",\n        \"If\",\n        \"Import\",\n        \"Pragma\",\n        \"Pass\",\n        \"For\",\n        \"Pub\",\n        \"Return\",\n        \"Revert\",\n        \"Struct\",\n        \"Type\",\n        \"While\",\n        \"And\",\n        \"As\",\n        \"In\",\n        \"Not\",\n        \"Or\",\n        // Symbols\n        \"ParenOpen\",\n        \"ParenClose\",\n        \"BracketOpen\",\n        \"BracketClose\",\n        \"BraceOpen\",\n        \"BraceClose\",\n        \"Colon\",\n        \"ColonColon\",\n        \"Comma\",\n        \"Semi\",\n        \"Plus\",\n        \"Minus\",\n        \"Star\",\n        \"Slash\",\n        \"Pipe\",\n        \"Amper\",\n        \"Lt\",\n        \"LtLt\",\n        \"Gt\",\n        \"GtGt\",\n        \"Eq\",\n        \"Dot\",\n        \"Percent\",\n        \"EqEq\",\n        \"NotEq\",\n        \"LtEq\",\n        \"GtEq\",\n        \"Tilde\",\n        \"Hat\",\n        \"StarStar\",\n        \"StarStarEq\",\n        \"PlusEq\",\n        \"MinusEq\",\n        \"StarEq\",\n        \"SlashEq\",\n        \"PercentEq\",\n        \"AmperEq\",\n        \"PipeEq\",\n        \"HatEq\",\n        \"LtLtEq\",\n        \"GtGtEq\",\n        \"Arrow\"\n    ];\n    tokenTypesLegend.forEach(function (tokenType, index) { return tokenTypes.set(tokenType, index); });\n    var tokenModifiersLegend = [\n        'declaration', 'documentation', 'readonly', 'static', 'abstract', 'deprecated',\n        'modification', 'async'\n    ];\n    tokenModifiersLegend.forEach(function (tokenModifier, index) { return tokenModifiers.set(tokenModifier, index); });\n    return new vscode.SemanticTokensLegend(tokenTypesLegend, tokenModifiersLegend);\n})();\nfunction activate(context) {\n    var dtp = new DocumentSemanticTokensProvider();\n    context.subscriptions.push(vscode.languages.registerDocumentSemanticTokensProvider({ language: 'fe', scheme: 'file' }, dtp, legend));\n}\nexports.activate = activate;\nfunction getLineNumberFromCharPos(text, pos) {\n    if (pos == 0)\n        return 0;\n    var res = text.slice(0, pos);\n    var lines = (res.match(/\\n/g) || '').length;\n    return lines;\n}\nfunction getFeTempOutputFolder() {\n    return vscode.workspace.workspaceFolders[0].uri.path + '/' + '.vscode/fe_output';\n}\nexports.getFeTempOutputFolder = getFeTempOutputFolder;\nfunction getTokenFileName() {\n    return getFeTempOutputFolder() + \"/module.tokens\";\n}\nfunction getTokensFromTokenFile() {\n    var lines;\n    try {\n        var fileName = getTokenFileName();\n        lines = fs.readFileSync(fileName).toString();\n    }\n    catch (err) {\n        console.error(err);\n    }\n    var ret = lines.split('Token').slice(1, -1);\n    return ret;\n}\nfunction getTokenDataLine(text, documentText) {\n    var start = Number(text.split('\\n').slice(1, -2)[3].replace(/\\s+/g, '').split(\":\")[1].replace(\",\", \"\"));\n    var ret = getLineNumberFromCharPos(documentText, start);\n    return ret;\n}\nfunction getTokenDataStartCharacter(text, documentText) {\n    //nasty way to extract the data!!! you should change this\n    var start = Number(text.split('\\n').slice(1, -2)[3].replace(/\\s+/g, '').split(\":\")[1].replace(\",\", \"\"));\n    if (start == 0)\n        return 0;\n    var ret = documentText.slice(0, start).split('\\n');\n    if (ret.length == 1)\n        return ret[0].length;\n    return ret[ret.length - 1].length;\n}\nfunction getTokenDataLength(text) {\n    //nasty way to extract the data!!! you should change this\n    var start = Number(text.split('\\n').slice(1, -2)[3].replace(/\\s+/g, '').split(\":\")[1].replace(\",\", \"\"));\n    var end = Number(text.split('\\n').slice(1, -2)[4].replace(/\\s+/g, '').split(\":\")[1].replace(\",\", \"\"));\n    return end - start;\n}\nfunction getTokenDataTokenType(text) {\n    var ret = text.split('\\n').slice(1, -2)[0].replace(/\\s+/g, '').split(\":\")[1].replace(\",\", \"\");\n    return ret;\n}\nfunction getTokenDataTokenModifiers(text) {\n    return [];\n}\nvar DocumentSemanticTokensProvider = /** @class */ (function () {\n    function DocumentSemanticTokensProvider() {\n    }\n    DocumentSemanticTokensProvider.prototype.provideDocumentSemanticTokens = function (document, token) {\n        return __awaiter(this, void 0, void 0, function () {\n            var moduleTokens, builder;\n            var _this = this;\n            return __generator(this, function (_a) {\n                moduleTokens = getTokensFromTokenFile();\n                builder = new vscode.SemanticTokensBuilder();\n                moduleTokens.forEach(function (token) {\n                    builder.push(getTokenDataLine(token, document.getText()), getTokenDataStartCharacter(token, document.getText()), getTokenDataLength(token), _this._encodeTokenType(getTokenDataTokenType(token)), _this._encodeTokenModifiers(getTokenDataTokenModifiers(token)));\n                });\n                return [2 /*return*/, builder.build()];\n            });\n        });\n    };\n    DocumentSemanticTokensProvider.prototype._encodeTokenType = function (tokenType) {\n        if (tokenTypes.has(tokenType)) {\n            return tokenTypes.get(tokenType);\n        }\n        else if (tokenType === 'notInLegend') {\n            return tokenTypes.size + 2;\n        }\n        return 0;\n    };\n    DocumentSemanticTokensProvider.prototype._encodeTokenModifiers = function (strTokenModifiers) {\n        var result = 0;\n        for (var i = 0; i < strTokenModifiers.length; i++) {\n            var tokenModifier = strTokenModifiers[i];\n            if (tokenModifiers.has(tokenModifier)) {\n                result = result | (1 << tokenModifiers.get(tokenModifier));\n            }\n            else if (tokenModifier === 'notInLegend') {\n                result = result | (1 << tokenModifiers.size + 2);\n            }\n        }\n        return result;\n    };\n    return DocumentSemanticTokensProvider;\n}());\n//# sourceMappingURL=tokenProvider.js.map","module.exports = require(\"child_process\");","module.exports = require(\"fs\");","module.exports = require(\"path\");","module.exports = require(\"vscode\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","'use strict';\n/** \n * @author github.com/tintinweb\n * @license MIT\n * \n * language definition based on: https://raw.githubusercontent.com/Microsoft/vscode/master/extensions/python/syntaxes/MagicPython.tmLanguage.json (MIT)\n * compilation related parts taken from: https://github.com/trufflesuite/truffle/tree/develop/packages/truffle-compile-fe (MIT)\n * */\n\n/** imports */\nconst vscode = require(\"vscode\");\nvar path = require(\"path\");\nconst fs = require('fs')\nconst execSync = require('child_process').execSync;\nconst exec = require('child_process').exec;\n\n// const mod_deco = require(\"./features/deco.js\");\n// const mod_signatures = require(\"./features/signatures.js\");\n// const mod_hover = require(\"./features/hover/hover.js\");\n// const mod_compile = require(\"./features/compile.js\");\nconst settings = require(\"./settings\");\nconst tp = require(\"./tokenProvider.js\");\n/** global vars */\nvar activeEditor;\n\nvar outputFiles = [];\n/** classdecs */\n\n\n/** funcdecs */\n\n\n/** event funcs */\nasync function onDidSave(document) {\n    \n    // vscode.window.showErrorMessage(document.fileName);\n    if (document.fileName.endsWith('.git')){\n        freshCompile(document.fileName.slice(0, -4));}\n    else{\n        freshCompile(document.fileName);}\n\n}\n\nasync function onDidChange(event) {\n    if (vscode.window.activeTextEditor.document.languageId != settings.LANGUAGE_ID) {\n        return;\n    }\n}\nfunction openFile(filePath) {\n    const openPath = vscode.Uri.file(filePath);\n    vscode.workspace.openTextDocument(openPath).then(doc => {\n        vscode.window.showTextDocument(doc);\n    });\n}\n\n\n\nfunction getFilesFromDir(\n    dir\n) {\n    var fileList = [];\n    // const isDirectory = fs.statSync(dir).isDirectory();\n\n\n    var files = fs.readdirSync(dir);\n\n    files.forEach((file) => {\n        const filePath = dir + '/' + file;\n        const isDirectory = fs.statSync(filePath).isDirectory();\n        if (isDirectory) {\n            fileList = fileList.concat(getFilesFromDir(filePath));\n        }\n        else {\n            fileList.push(filePath);\n        }\n\n\n    });\n    return fileList;\n}\n\nfunction getFeOutputFolder() {\n    return vscode.workspace.workspaceFolders[0].uri.path + '/' + settings.extensionConfig().outputFolder;\n}\nfunction getFeCommand() {\n    return settings.extensionConfig().command;\n}\nfunction compileAllinVS(fileName) {\n    const fe_options = \"--overwrite --emit=abi,bytecode,ast,tokens,yul,loweredAst\";\n    const outputFolder = tp.getFeTempOutputFolder();\n    const rmCommand = \"rm -rf \" + outputFolder;\n    if (fileName.endsWith('.git'))\n        fileName = fileName.slice(0, -4);\n        if (!fileName.endsWith('.fe')) return;\n    const feCommand = getFeCommand()\n        + \" \"\n        + fileName + \" \" + fe_options + \" \"\n        + \"--output-dir \" + outputFolder;\n    const rmOutput = execSync(rmCommand).toString();\n    try {\n        execSync(feCommand);\n    }\n    catch (e) {\n        vscode.window.showErrorMessage('[Compiler Exception] ' + e);\n    }\n}\n\nfunction freshCompile(fileName) {\n    compileAllinVS(fileName);\n    const fe_options = settings.extensionConfig().options;\n    if (fileName.endsWith('.git'))\n        fileName = fileName.slice(0, -4);\n        if (!fileName.endsWith('.fe')) return;\n    const outputFolder = getFeOutputFolder();\n    const rmCommand = \"rm -rf \" + outputFolder;\n    const feCommand = getFeCommand()\n        + \" \"\n        + fileName + \" \" + fe_options + \" \"\n        + \"--output-dir \" + outputFolder;\n    execSync(rmCommand);\n    try {\n        execSync(feCommand);\n    }\n    catch (e) {\n        vscode.window.showErrorMessage('[Compiler Exception] ' + e);\n    }\n    outputFiles = [fileName].concat(getFilesFromDir(outputFolder));\n\n}\nfunction onInitModules(context, lang) {\n}\nfunction onActivate(context) {\n    const active = vscode.window.activeTextEditor;\n    activeEditor = active;\n    let disposable = vscode.commands.registerCommand('fe.openAST', () => {\n        var workPath = vscode.workspace.workspaceFolders[0].uri.path;\n        var currentlyOpenTabfilePath = vscode.window.activeTextEditor.document.fileName;\n        var currentlyOpenTabfileName = path.basename(currentlyOpenTabfilePath);\n        if (currentlyOpenTabfileName.endsWith('.git'))\n        {\n            vscode.window.showErrorMessage('git git');\n        currentlyOpenTabfileName = currentlyOpenTabfileName.slice(0, -4);\n        }\n\n        if (outputFiles.length != 0) {\n            let ind = outputFiles.indexOf(currentlyOpenTabfilePath);\n            if (ind != -1) {\n                if (ind < outputFiles.length - 1) {\n                    openFile(outputFiles[ind + 1]);\n                }\n                else {\n                    openFile(outputFiles[0]);\n                }\n            }\n        }\n\n\n    });\n    context.subscriptions.push(disposable);\n\n    registerDocType(settings.LANGUAGE_ID);\n\n\n    function registerDocType(type) {\n        context.subscriptions.push(\n            vscode.languages.reg\n        );\n    }\n\n\n\n\n    // taken from: https://github.com/Microsoft/vscode/blob/master/extensions/python/src/pythonMain.ts ; slightly modified\n    // autoindent while typing\n    vscode.languages.setLanguageConfiguration(settings.LANGUAGE_ID, {\n        onEnterRules: [\n            {\n                beforeText: /^\\s*(?:pub|struct|def|class|for|if|elif|else|while|try|with|finally|except|async).*?:\\s*$/,\n                action: { indentAction: vscode.IndentAction.Indent }\n            }\n        ]\n    });\n\n\n\n    /** module init */\n    onInitModules(context, settings.LANGUAGE_ID);\n    onDidChange();\n    onDidSave(active.document);\n\n    /** event setup */\n    /***** OnChange */\n    vscode.window.onDidChangeActiveTextEditor(editor => {\n        activeEditor = editor;\n        if (editor) {\n            onDidChange();\n        }\n    }, null, context.subscriptions);\n    /***** OnChange */\n    vscode.workspace.onDidChangeTextDocument(event => {\n        if (activeEditor && event.document === activeEditor.document) {\n            onDidChange(event);\n        }\n    }, null, context.subscriptions);\n    /***** OnSave */\n\n    vscode.workspace.onDidSaveTextDocument(document => {\n\n\n        onDidSave(document);\n        tp.activate(context);\n    }, null, context.subscriptions);\n\n    tp.activate(context);\n\n    /****** OnOpen */\n    vscode.workspace.onDidOpenTextDocument(document => {\n        onDidSave(document);\n    }, null, context.subscriptions);\n\n    /***** SignatureHelper */\n    /*\n    context.subscriptions.push(\n        vscode.languages.registerSignatureHelpProvider(\n            { language: type },\n            new mod_signatures.feSignatureHelpProvider(),\n            '(', ','\n        )\n    );\n    */\n\n\n}\n\n/* exports */\nexports.activate = onActivate;\n"],"sourceRoot":""}